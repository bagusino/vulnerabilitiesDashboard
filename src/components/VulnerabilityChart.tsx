import {
  BarChart,
  Bar,
  ResponsiveContainer,
  XAxis,
  YAxis,
  Tooltip,
  Cell
} from "recharts"

interface Vulnerability {
  cve: string
  description: string
  severity: string
}

interface Props {
  vulnerabilities: Vulnerability[]
}

export function VulnerabilityChart({ vulnerabilities }: Props) {
  const counts = {
    Crítica: 0,
    Alta: 0,
    Media: 0,
    Baja: 0,
  }

  vulnerabilities.forEach(v => {
    counts[v.severity as keyof typeof counts]++
  })

  const data = Object.entries(counts).map(([severity, total]) => ({
    severity,
    total,
  }))

  const getColor = (severity: string) => {
    switch (severity) {
      case "Crítica": return "#dc2626" // rojo
      case "Alta": return "#f97316" // naranja
      case "Media": return "#eab308" // amarillo
      case "Baja": return "#22c55e" // verde
      default: return "#6b7280" // gris por si acaso
    }
  }

  return (
    <ResponsiveContainer width="100%" height={200}>
      <BarChart data={data}>
        <XAxis
          dataKey="severity"
          fontSize={12}
          tickLine={false}
          axisLine={false}
        />
        <YAxis
          fontSize={12}
          tickLine={false}
          axisLine={false}
        />
        <Tooltip/>
        <Bar dataKey="total" radius={[4, 4, 0, 0]}>
          {data.map((entry, index) => (
            <Cell key={`cell-${index}`} fill={getColor(entry.severity)} />
          ))}
        </Bar>
      </BarChart>
    </ResponsiveContainer>
  )
}
