// src/components/VulnerabilityTrendCard.tsx
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts"

interface Vulnerability {
  cve: string
  description: string
  severity: string
  dateDetected: string
}

interface Props {
  vulnerabilities: Vulnerability[]
}

export function VulnerabilityTrendCard({ vulnerabilities }: Props) {
  const dataByDate: Record<string, number> = {}

  for (const vuln of vulnerabilities) {
    if (!vuln.dateDetected) continue
    const date = vuln.dateDetected
    dataByDate[date] = (dataByDate[date] || 0) + 1
  }

  const sortedData = Object.entries(dataByDate)
    .sort(([a], [b]) => a.localeCompare(b))
    .map(([date, count]) => ({ date, count }))

  const last = sortedData[sortedData.length - 1]?.count || 0
  const secondLast = sortedData[sortedData.length - 2]?.count || 0

  return (
    <Card className="max-w-md">
      <CardHeader>
        <CardTitle>Vulnerabilidades detectadas</CardTitle>
        <p className="text-2xl font-bold">{vulnerabilities.length}</p>
        <p className="text-sm text-muted-foreground">
          +{sortedData.length > 1 ? last - secondLast : 0} desde el Ãºltimo registro
        </p>
      </CardHeader>
      <CardContent>
        <ResponsiveContainer width="100%" height={150}>
          <LineChart data={sortedData}>
            <XAxis dataKey="date" hide />
            <YAxis hide />
            <Tooltip />
            <Line type="monotone" dataKey="count" stroke="#ffffff" strokeWidth={2} dot={{ r: 3 }} />
          </LineChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  )
}
